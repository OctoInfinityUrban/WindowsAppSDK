#Requires -RunAsAdministrator

<#  
.SYNOPSIS
    Run the TAEF dlls generated by WinAppSDK

.DESCRIPTION
    The TestAll script will take the folder input and look for subfolders containing a .testmd file. WinAppSDK
    components define a testmd with the following schema and runs the TAEF dll in the subfolder.
    
    Example:
    {
        "Tests": [
            {
                "Description": "Enabled: This module tests the push notifications component in WinAppSDK.",
                "Filename": "PushNotificationTests.dll",
                "Parameters": "",
                "Architectures": ["x86", "x64", "arm64"],
                "Status": "Enabled" 
            }
        ]
    }

.PARAMETER OutputFolder
    Set the base folder for the script to look for testmds

.PARAMETER Platform
    Only run tests for the selected platform(s)

.PARAMETER Configuration
    Only run tests the selected configuration(s)
#>

param(
        [Parameter(Mandatory=$true)]
        [string]$OutputFolder,
        [Parameter(Mandatory=$true)]
        [string]$Platform,
        [Parameter(Mandatory=$true)]
        [string]$Configuration,
        [Parameter(Mandatory=$false)]
        [string]$AzureBuildStep="all"
)

$StartTime = Get-Date
$lastexitcode = 0
Set-StrictMode -Version 3.0

if (($AzureBuildStep -eq "all") -Or ($AzureBuildStep -eq "DisplayInfo")) {
    # Display OS build/version info
    Get-Item -Path 'HKLM:\Software\Microsoft\Windows NT\CurrentVersion'
    # Display OS language settings
    Write-Host (reg query "HKLM\SYSTEM\CurrentControlSet\Control\MUI" /s)
    Write-Host (reg query "HKLM\SYSTEM\CurrentControlSet\Control\Nls" /s)
    Write-Host (reg query "HKCU\Control Panel\International" /s)

    Write-Host "Get-WmiObject -Class Win32_OperatingSystem" 
    $OSInfo = Get-WmiObject -Class Win32_OperatingSystem
    $languagePacks = $OSInfo.MUILanguages
    $languagePacks

    Write-Host "dism /online /Get-Intl" 
    dism /online /Get-Intl

    Write-Host "Get-WinUserLanguageList" 
    Get-WinUserLanguageList

    Write-Host "Get-WinUILanguageOverride"
    Get-WinUILanguageOverride

    Write-Host "Get-WinSystemLocale"
    Get-WinSystemLocale
}

if (($AzureBuildStep -eq "all") -Or ($AzureBuildStep -eq "RunTests")) {
    $ConfigPlat = Join-Path $Configuration $Platform
    $OutputFolderPath = Join-Path $OutputFolder $ConfigPlat 
    foreach ($testmd in (Get-ChildItem -Recurse -Filter "*.testmd" $OutputFolderPath))
    {
        $testJson = Get-Content -Raw $testmd.FullName | ConvertFrom-Json
        Write-Host $testJson.Tests
        foreach ($testConfig in $testJson.Tests)
        {
            Write-Host $testConfig.Description
            if ($testConfig.Status -eq "Enabled")
            {
                $testFolder = Split-Path -parent $testmd.FullName
                $tePath = Join-Path $testFolder "te.exe"
                $dllFile = Join-Path $testFolder $testConfig.Filename
                & $tePath $dllFile
            }
            else
            {
                Write-Host "Test is disabled. Not running."
            }
        }
    }
}

$TotalTime = (Get-Date)-$StartTime
$TotalMinutes = $TotalTime.Minutes
$TotalSeconds = $TotalTime.Seconds
Write-Host "Total Running Time: $TotalMinutes minutes and $TotalSeconds seconds"
