parameters:
- name: WinAppSdkPackageArtifactPath
  type: string
  default: "$(System.ArtifactsDirectory)\\NugetPackages"

steps:
- task: PowerShell@2
  name: ExtractWindowsAppSDKVersion
  displayName: Extract WindowsAppSDKVersion
  inputs:
    targetType: 'inline'
    script: |
      Copy-Item -Path "${{ parameters.WinAppSdkPackageArtifactPath }}" -Destination "$(System.ArtifactsDirectory)\temp" -Recurse

      $files = Get-ChildItem $(System.ArtifactsDirectory)\temp
      foreach ($file in $files) # Iterate through each package we restored in the directory
      {
        Write-Host "file:" $file.FullName
        $nupkgPaths = Get-ChildItem $file.FullName -Filter "*.nupkg"

        # Extract nupkg to access the nuspec
        # The files in this directory does not contain the nuspec by default
        foreach ($nupkgPath in $nupkgPaths)
        {
          Write-Host "nupkgPath:" $nupkgPath.FullName
          $rename = $nupkgPath.Name + ".zip"
          Rename-Item $nupkgPath.FullName $rename
          $renamedFilePath = $nupkgPath.FullName + ".zip"
          $dest = $file.FullName + "/contents"
          Expand-Archive $renamedFilePath -Destination $dest
        }

        $nuspecPaths = Get-ChildItem $file.FullName -Recurse -Filter "*.nuspec"
        foreach ($nuspecPath in $nuspecPaths)
        {
          Write-Host "Found Nuspecs"
          [xml]$nuspec = Get-Content -Path $nuspecPath.FullName
          if ($nuspec.package.metadata.id -eq 'Microsoft.WindowsAppSDK')
          {
            $version = $nuspec.package.metadata.version
            Write-Host "Found " $version
            Write-Host "##vso[task.setvariable variable=WindowsAppSDKPackageVersion]$version"
            Write-Host "##vso[task.setvariable variable=WindowsAppSDKPackageVersion;isOutput=true]$version"
            Exit 0
          }
        }
      }
      Exit 1
