// Copyright (c) Microsoft Corporation and Contributors.
// Licensed under the MIT License.

import "oaidl.idl";
import "ocidl.idl";
import "inspectable.idl";

[object]
[uuid(5239c3b0-9e90-11ed-87cd-0800200c9a66)]
[pointer_default(unique)]
interface IKozaniStatusCallback : IInspectable
{
    HRESULT OnActivated(DWORD pid, boolean isNewInstance);

    HRESULT OnActivationFailed(
        DWORD errorCode,
        [in, string] LPCWSTR errorMessage);

    HRESULT OnClosed();
};

[object]
[uuid(43665c78-faf6-4534-9411-321147fc80ea)]
[pointer_default(unique)]
interface IKozaniRemoteDesktopClientLauncher : IUnknown
{
    HRESULT Launch(
        [in, string] LPCWSTR connectionRdpFilePath,
        [in, string, unique] LPCWSTR userName);
};

[object]
[uuid(5882f14f-f954-4af9-bbeb-a7c1a2a6357e)]
[pointer_default(unique)]
interface IKozaniManager : IUnknown
{
    HRESULT ActivateRemoteApplication(
        INT32 activationKind,
        [in, string] LPCWSTR appUserModelId,
        [in, string] LPCWSTR connectionRdpFilePath,
        [in] IKozaniRemoteDesktopClientLauncher* rdcLauncher,
        DWORD associatedLocalProcessId,                         // Use 0 if the remote app is not associated with a local process (no tracking local process for lifetime management).
        [in, unique] IInspectable* activatedEventArgs,          // optional - can be nullptr if there are no activatedEventArgs
        [in, unique] IKozaniStatusCallback* statusCallback,     // optional - can be nullptr if the caller does not need status update callbacks
        [in, string, unique] LPCWSTR additionalSettingsFilePath // optional - can be nullptr if the additional settings file does not exist
    );
};
