namespace Microsoft.Windows.AppNotifications.Builder
{
    runtimeclass AppNotificationTextProperties
    {
        // Contains the set of <text> attributes
        AppNotificationTextProperties();

        AppNotificationTextProperties SetLanguage(String value);
        AppNotificationTextProperties SetIncomingCallAlignment();
        AppNotificationTextProperties SetMaxLines(Int32 value);

        String GetXml();
    }

    enum AppNotificationButtonStyle
    {
        Default,
        Success,
        Critical,
    };

    runtimeclass AppNotificationButton
    {
        AppNotificationButton();
        AppNotificationButton(String content);

        AppNotificationButton AddArgument(String key, String value);

        // Sets the Icon for the button.
        AppNotificationButton SetIcon(Windows.Foundation.Uri value);

        // The tooltip for a button, if the button has an empty content string.
        AppNotificationButton SetToolTip(String value);

        // Sets the Button as context menu action.
        AppNotificationButton SetContextMenuPlacement();

        // Sets the ButtonStyle to Success or Critical
        AppNotificationButton SetButtonStyle(AppNotificationButtonStyle value);

        // Specifies the ID of an existing TextBox next to which the button will be placed.
        AppNotificationButton SetInputId(String value);

        // Launches the URI passed into the button when activated.
        AppNotificationButton SetInvokeUri(Windows.Foundation.Uri protocolUri);
        AppNotificationButton SetInvokeUri(Windows.Foundation.Uri protocolUri, String targetAppId);

        // Retrieves the XML content of the button.
        String GetXml();
    };

    enum AppNotificationSoundEvent
    {
        Default,
        IM,
        Mail,
        Reminder,
        SMS,
        Alarm,
        Alarm2,
        Alarm3,
        Alarm4,
        Alarm5,
        Alarm6,
        Alarm7,
        Alarm8,
        Alarm9,
        Alarm10,
        Call,
        Call2,
        Call3,
        Call4,
        Call5,
        Call6,
        Call7,
        Call8,
        Call9,
        Call10,
    };

    enum AppNotificationScenario
    {
        Default, // The normal AppNotification behavior. The AppNotification appears for a short duration, and then automatically dismisses into Notification Center.
        Reminder, // The notification will stay on screen until the user dismisses it or takes action.
        Alarm,    // Alarms behave like Reminder, but alarms will additionally loop audio with a default alarm sound.
        IncomingCall, // Incoming call notifications are displayed pre-expanded in a special call format and stay on the user's screen till dismissed.
        Urgent, // Important notifications allow users to have more control over what 1st party and 3rd party apps can send them high-priority AppNotifications (urgent/important) that can break through Focus Assist.
    };

    enum AppNotificationDuration
    {
        Default, // Default value. AppNotification appears for a short while and then goes into Notification Center.
        Long, // AppNotification stays on-screen for longer, and then goes into Notification Center.
    };

    enum ImageCrop
    {
        Default, // Uses the default renderer to display the image
        Circle, // Crops the image as a circle.
    };

    runtimeclass AppNotificationBuilder
    {
        AppNotificationBuilder();

        // Adds arguments to the launch attribute to return when AppNotification is clicked.
        AppNotificationBuilder AddArgument(String key, String value);

        // Sets the timeStamp of the AppNotification to when it was constructed instead of when it was sent.
        AppNotificationBuilder SetTimeStamp(Windows.Foundation.DateTime value);

        // Sets the scenario of the AppNotification.
        AppNotificationBuilder SetScenario(AppNotificationScenario value);

        // Adds text to the AppNotification.
        AppNotificationBuilder AddText(String text);
        AppNotificationBuilder AddText(String text, AppNotificationTextProperties properties);

        AppNotificationBuilder SetAttributionText(String text);
        AppNotificationBuilder SetAttributionText(String text, String language);

        // Sets the full-width inline-image that appears when you expand the AppNotification
        AppNotificationBuilder SetInlineImage(Windows.Foundation.Uri imageUri);
        AppNotificationBuilder SetInlineImage(Windows.Foundation.Uri imageUri, ImageCrop imageCrop);
        AppNotificationBuilder SetInlineImage(Windows.Foundation.Uri imageUri, ImageCrop imagecrop, String alternateText);

        // Sets the image that replaces the app logo
        AppNotificationBuilder SetAppLogoOverride(Windows.Foundation.Uri imageUri);
        AppNotificationBuilder SetAppLogoOverride(Windows.Foundation.Uri imageUri, ImageCrop imageCrop);
        AppNotificationBuilder SetAppLogoOverride(Windows.Foundation.Uri imageUri, ImageCrop imageCrop, String alternateText);

        // Sets the image that displays within the banner of the AppNotification.
        AppNotificationBuilder SetHeroImage(Windows.Foundation.Uri imageUri);
        AppNotificationBuilder SetHeroImage(Windows.Foundation.Uri imageUri, String alternateText);

        // SetAudio
        AppNotificationBuilder SetAudioUri(Windows.Foundation.Uri audioUri);
        AppNotificationBuilder SetAudioUri(Windows.Foundation.Uri audioUri, AppNotificationDuration duration);

        AppNotificationBuilder SetAudioEvent(AppNotificationSoundEvent appNotificationSoundEvent);
        AppNotificationBuilder SetAudioEvent(AppNotificationSoundEvent appNotificationSoundEvent, AppNotificationDuration duration);

        AppNotificationBuilder MuteAudio();

        // Adds a button to the AppNotificationBuilder
        AppNotificationBuilder AddButton(AppNotificationButton value);

        // Constructs a WindowsAppSDK AppNotification object with the XML payload
        //AppNotification BuildNotification();

        // AppNotification properties
        //AppNotificationBuilder SetTag(String value);
        //AppNotificationBuilder SetGroup(String group);

        // Retrieves the notification XML content so that it can be used with a local
        // AppNotification constructor.
        String GetXml();
    };
}
