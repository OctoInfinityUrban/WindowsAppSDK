// Copyright (c) Microsoft Corp. Licensed under the MIT license.

namespace Microsoft.ProjectReunion.ApplicationModel
{
    // Forward declare
    runtimeclass DragInfo;
    runtimeclass DragOperation;
    runtimeclass DragUIOverride;
    runtimeclass DragDropManager;
    runtimeclass DropOperationTargetRequestedEventArgs;

    enum DragDropModifiers
    {
        None = 0x0,
        Shift = 0x1,
        Control = 0x2,
        Alt = 0x4,
        LeftButton = 0x8,
        MiddleButton = 0x10,
        RightButton = 0x20
    };

    enum DragUIContentMode
    {
        Auto,
        Deferred,
    };

    runtimeclass DragInfo
    {
        Microsoft.ProjectReunion.ApplicationModel.DataPackage Data { get; };
        DragDropModifiers Modifiers { get; };
        Windows.Foundation.Point Position { get; };
        Microsoft.ProjectReunion.ApplicationModel.DataPackage.DataPackageOperation AllowedOperations { get; };
    }

    runtimeclass DragUIOverride
    {
        void SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap softwareBitmap);
        void SetContentFromSoftwareBitmapWithAnchorPoint(Windows.Graphics.Imaging.SoftwareBitmap softwareBitmap, Windows.Foundation.Point anchorPoint);
        Boolean IsContentVisible;
        String Caption;
        Boolean IsCaptionVisible;
        Boolean IsGlyphVisible;
        void Clear();
    }

    interface IDropOperationTarget
    {
        Windows.Foundation.IAsyncOperation<Microsoft.ProjectReunion.ApplicationModel.DataPackageOperation> EnterAsync(DragInfo dragInfo, DragUIOverride dragUIOverride);
        Windows.Foundation.IAsyncOperation<Microsoft.ProjectReunion.ApplicationModel.DataPackageOperation> OverAsync(DragInfo dragInfo, DragUIOverride dragUIOverride);
        Windows.Foundation.IAsyncAction LeaveAsync(DragInfo dragInfo);
        Windows.Foundation.IAsyncOperation<Microsoft.ProjectReunion.ApplicationModel.DataPackageOperation> DropAsync(DragInfo dragInfo);
    }

    runtimeclass DragOperation
    {
        Microsoft.ProjectReunion.ApplicationModel.DataPackageOperation AllowedOperations;
        Microsoft.ProjectReunion.ApplicationModel.DataPackage Data { get; };
        DragUIContentMode DragUIContentMode;
        void SetPointerId(UInt32 pointerId);
        void SetDragUIContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap softwareBitmap);
        void SetDragUIContentFromSoftwareBitmapWithAnchorPoint(Windows.Graphics.Imaging.SoftwareBitmap softwareBitmap, Windows.Foundation.Point anchorPoint);
        Windows.Foundation.IAsyncOperation<Microsoft.ProjectReunion.ApplicationModel.DataPackageOperation> StartAsync();
    }

    runtimeclass DragDropManager
    {
        static DragDropManager GetForCurrentWindow();
        event Windows.Foundation.TypedEventHandler<DragDropManager, DropOperationTargetRequestedEventArgs> TargetRequested;
    }

    runtimeclass DropOperationTargetRequestedEventArgs
    {
        void SetTarget(IDropOperationTarget target);
    }
} // Microsoft.ProjectReunion.ApplicationModel.DragDrop
