// Copyright (c) Microsoft Corp. Licensed under the MIT license.

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Foundation.Metadata.idl";
import "Windows.Security.EnterpriseData.idl";
import "Windows.Storage.idl";
import "Windows.Storage.Streams.idl";
import "Windows.UI.idl";
#include <sdkddkver.h>

// Forward Declare
namespace Windows.Foundation
{
  typedef struct DateTime DateTime;
  runtimeclass Uri;
}

namespace Windows.Foundation.Metadata
{

  // FIXME: Figure out how to actually forward declare/prototype this WinRT Foundation attribute
  // without defining it

  [attributeusage(target_all)]
  [attributename("hasvariant")]
  [version(NTDDI_WIN8)]
  attribute HasVariantAttribute
  {
  }
}

namespace Windows.Security.EnterpriseData
{
  typedef enum ProtectionPolicyEvaluationResult ProtectionPolicyEvaluationResult;
}

namespace Windows.Storage
{
  interface IStorageItem;
  interface IStorageFile;
  runtimeclass StorageFile;
}

namespace Windows.Storage.Streams
{
  interface IRandomAccessStreamReference;
  runtimeclass RandomAccessStreamReference;
}

namespace Windows.UI
{
  typedef struct Color Color;
}

namespace Microsoft.ProjectReunion.ApplicationModel
{
  [contractversion(1.0)]
  apicontract ClipboardContract { };

  typedef enum ClipboardHistoryItemsResultStatus ClipboardHistoryItemsResultStatus;
  typedef enum DataPackageOperation DataPackageOperation;
  typedef enum SetHistoryItemAsContentStatus SetHistoryItemAsContentStatus;
  delegate DataProviderHandler;
  runtimeclass Clipboard;
  runtimeclass ClipboardContentOptions;
  runtimeclass ClipboardHistoryChangedEventArgs;
  runtimeclass ClipboardHistoryItem;
  runtimeclass ClipboardHistoryItemsResult;
  runtimeclass DataPackage;
  runtimeclass DataPackagePropertySet;
  runtimeclass DataPackagePropertySetView;
  runtimeclass DataPackageView;
  runtimeclass DataProviderDeferral;
  runtimeclass DataProviderRequest;
  runtimeclass HtmlFormatHelper;
  runtimeclass OperationCompletedEventArgs;
  runtimeclass StandardDataFormats;
}

// Generic instantiations
namespace Microsoft.ProjectReunion.ApplicationModel
{
  declare
  {
    interface Windows.Foundation.Collections.IIterable<ClipboardHistoryItem*>;
    interface Windows.Foundation.Collections.IIterator<ClipboardHistoryItem*>;
    interface Windows.Foundation.Collections.IVectorView<ClipboardHistoryItem*>;
    interface Windows.Foundation.EventHandler<ClipboardHistoryChangedEventArgs*>;
    interface Windows.Foundation.IAsyncOperation<ClipboardHistoryItemsResult*>;
    interface Windows.Foundation.IAsyncOperation<DataPackage*>;
    interface Windows.Foundation.IAsyncOperation<DataPackageOperation>;
    interface Windows.Foundation.TypedEventHandler<DataPackage*, IInspectable*>;
    interface Windows.Foundation.TypedEventHandler<DataPackage*, OperationCompletedEventArgs*>;
  }
}

// Type definitions
namespace Microsoft.ProjectReunion.ApplicationModel
{
  // FIXME: Figure out how to declare these enums without causing definition conflicts
  // between the enum constants and the same-named ones in
  // Windows.ApplicationModel.DataTransfer

  [contract(ClipboardContract, 1.0)]
  enum ClipboardHistoryItemsResultStatus
  {
    aaaSuccess                  = 0,
    aaaAccessDenied             = 1,
    aaaClipboardHistoryDisabled = 2,
  };

  [contract(ClipboardContract, 1.0)]
  [flags]
  enum DataPackageOperation
  {
    aaaNone = 0x0,
    aaaCopy = 0x1,
    aaaMove = 0x2,
    aaaLink = 0x4,
  };

  [contract(ClipboardContract, 1.0)]
  enum SetHistoryItemAsContentStatus
  {
    aaaSuccess      = 0,
    aaaAccessDenied = 1,
    aaaItemDeleted  = 2,
  };

  [contract(ClipboardContract, 1.0)]
  [uuid(6d9e7bfb-3280-4219-be29-08145f30f4e5)]
  delegate void DataProviderHandler(DataProviderRequest request);

  [contract(ClipboardContract, 1.0)]
  [static_name("Microsoft.ProjectReunion.ApplicationModel.IClipboardStatics", 6cb53030-4da0-43a1-95ab-52f87cf59c3a)]
  [marshaling_behavior(standard)]
  static runtimeclass Clipboard
  {
    static DataPackageView GetContent();
    static void SetContent(DataPackage content);

    static void Flush();
    static void Clear();

    static event Windows.Foundation.EventHandler<Object> ContentChanged;

    static Windows.Foundation.IAsyncOperation<ClipboardHistoryItemsResult> GetHistoryItemsAsync();
    static Boolean ClearHistory();
    static Boolean DeleteItemFromHistory(ClipboardHistoryItem item);
    static SetHistoryItemAsContentStatus SetHistoryItemAsContent(ClipboardHistoryItem item);
    static Boolean IsHistoryEnabled();
    static Boolean IsRoamingEnabled();

    static Boolean SetContentWithOptions(DataPackage content, ClipboardContentOptions options);

    static event Windows.Foundation.EventHandler<ClipboardHistoryChangedEventArgs> HistoryChanged;
    static event Windows.Foundation.EventHandler<Object> RoamingEnabledChanged;
    static event Windows.Foundation.EventHandler<Object> HistoryEnabledChanged;
  }

  [contract(ClipboardContract, 1.0)]
  [interface_name("Microsoft.ProjectReunion.ApplicationModel.IClipboardContentOptions", c31b927f-1008-4e98-b575-adf175ccdd0b)]
  runtimeclass ClipboardContentOptions
  {
    ClipboardContentOptions();

    Boolean IsRoamable;
    Boolean IsAllowedInHistory;
    Windows.Foundation.Collections.IVector<String> RoamingFormats { get; };
    Windows.Foundation.Collections.IVector<String> HistoryFormats { get; };
  }

  [contract(ClipboardContract, 1.0)]
  [interface_name("Microsoft.ProjectReunion.ApplicationModel.IClipboardHistoryChangedEventArgs", 9d1960c7-cf0a-4e51-943c-72373b7a2579)]
  runtimeclass ClipboardHistoryChangedEventArgs
  { }

  [contract(ClipboardContract, 1.0)]
  [interface_name("Microsoft.ProjectReunion.ApplicationModel.IClipboardHistoryItem", 1907eff8-7d2f-4a71-8a56-bd02effeb184)]
  runtimeclass ClipboardHistoryItem
  {
    String Id { get; };
    Windows.Foundation.DateTime Timestamp { get; };
    DataPackageView Content { get; };
  }

  [contract(ClipboardContract, 1.0)]
  [interface_name("Microsoft.ProjectReunion.ApplicationModel.IClipboardHistoryItemsResult", 2f6c9705-f56b-42f0-b1a1-fc2d46d572e7)]
  runtimeclass ClipboardHistoryItemsResult
  {
    ClipboardHistoryItemsResultStatus Status { get; };
    Windows.Foundation.Collections.IVectorView<ClipboardHistoryItem> Items { get; };
  }

  [contract(ClipboardContract, 1.0)]
  [interface_name("Microsoft.ProjectReunion.ApplicationModel.IDataPackage", 36861532-b01e-49c5-9a0b-2282d079c9ac)]
  runtimeclass DataPackage
  {
    DataPackage();

    DataPackageView GetView();
    DataPackagePropertySet Properties { get; };
    DataPackageOperation RequestedOperation;
    event Windows.Foundation.TypedEventHandler<DataPackage, OperationCompletedEventArgs> OperationCompleted;
    event Windows.Foundation.TypedEventHandler<DataPackage, Object> Destroyed;
    void SetData(String formatId, [hasvariant] Object value);
    void SetDataProvider(String formatId, DataProviderHandler delayRenderer);
    void SetText(String value);
    [deprecated("SetUri may be altered or unavailable in future releases. Instead, use SetWebLink or SetApplicationLink.", deprecate, ClipboardContract, 1.0)]
    void SetUri(Windows.Foundation.Uri value);
    void SetHtmlFormat(String value);

    Windows.Foundation.Collections.IMap<String, Windows.Storage.Streams.RandomAccessStreamReference> ResourceMap { get; };

    void SetRtf(String value);
    void SetBitmap(Windows.Storage.Streams.RandomAccessStreamReference value);

    [method_name("SetStorageItemsReadOnly")]
    void SetStorageItems(Windows.Foundation.Collections.IIterable<Windows.Storage.IStorageItem> value);
    [method_name("SetStorageItems")]
    void SetStorageItems(Windows.Foundation.Collections.IIterable<Windows.Storage.IStorageItem> value, Boolean readOnly);

    void SetApplicationLink(Windows.Foundation.Uri value);
    void SetWebLink(Windows.Foundation.Uri value);
  }

  [contract(ClipboardContract, 1.0)]
  runtimeclass DataPackagePropertySet :
    [default] IDataPackagePropertySet
    , Windows.Foundation.Collections.IMap<String, Object>
    , Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Object> >
  { }

  [contract(ClipboardContract, 1.0)]
  [uuid(6c1bd5dd-d89e-4f79-ae3b-4ad565586202)]
  [exclusiveto(DataPackagePropertySet)]
  [hasvariant]
  interface IDataPackagePropertySet requires
    Windows.Foundation.Collections.IMap<String, Object>
    , Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Object> >
  {
    String Title;
    String Description;
    Windows.Storage.Streams.IRandomAccessStreamReference Thumbnail;
    Windows.Foundation.Collections.IVector<String> FileTypes { get; };
    String ApplicationName;
    Windows.Foundation.Uri ApplicationListingUri;

    Windows.Foundation.Uri ContentSourceWebLink;
    Windows.Foundation.Uri ContentSourceApplicationLink;
    String PackageFamilyName;
    Windows.Storage.Streams.IRandomAccessStreamReference Square30x30Logo;
    Windows.UI.Color LogoBackgroundColor;

    String EnterpriseId;

    String ContentSourceUserActivityJson;
  }

  [contract(ClipboardContract, 1.0)]
  runtimeclass DataPackagePropertySetView :
    [default] IDataPackagePropertySetView
    , Windows.Foundation.Collections.IMapView<String, Object>
    , Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Object> >
  { }

  [contract(ClipboardContract, 1.0)]
  [uuid(054c0bc4-ca76-4e7d-9511-4322a5a0b58b)]
  [exclusiveto(DataPackagePropertySetView)]
  [hasvariant]
  interface IDataPackagePropertySetView requires
    Windows.Foundation.Collections.IMapView<String, Object>
    , Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Object> >
  {
    String Title { get; };
    String Description { get; };
    Windows.Storage.Streams.IRandomAccessStreamReference Thumbnail { get; };
    Windows.Foundation.Collections.IVector<String> FileTypes { get; };
    String ApplicationName { get; };
    Windows.Foundation.Uri ApplicationListingUri { get; };

    String PackageFamilyName { get; };
    Windows.Foundation.Uri ContentSourceWebLink { get; };
    Windows.Foundation.Uri ContentSourceApplicationLink { get; };
    Windows.Storage.Streams.IRandomAccessStreamReference Square30x30Logo { get; };
    Windows.UI.Color LogoBackgroundColor { get; };

    String EnterpriseId { get; };

    String ContentSourceUserActivityJson { get; };

    Boolean IsFromRoamingClipboard { get; };
  }

  [contract(ClipboardContract, 1.0)]
  [interface_name("Microsoft.ProjectReunion.ApplicationModel.IDataPackageView", 659f7a31-3335-4e57-b373-8898ffae5ab1)]
  runtimeclass DataPackageView
  {
    DataPackagePropertySetView Properties { get; };

    DataPackageOperation RequestedOperation { get; };
    void ReportOperationCompleted(DataPackageOperation operation);

    Windows.Foundation.Collections.IVectorView<String> AvailableFormats { get; };
    Boolean Contains(String formatId);

    Windows.Foundation.IAsyncOperation<Object> GetDataAsync(String formatId);

    [method_name("GetTextAsync")]
    Windows.Foundation.IAsyncOperation<String> GetTextAsync();
    [method_name("GetCustomTextAsync")]
    Windows.Foundation.IAsyncOperation<String> GetTextAsync(String formatId);

    [deprecated("GetUriAsync may be altered or unavailable in future releases. Instead, use GetWebLinkAsync or GetApplicationLinkAsync.", deprecate, ClipboardContract, 1.0)]
    Windows.Foundation.IAsyncOperation<Windows.Foundation.Uri> GetUriAsync();
    Windows.Foundation.IAsyncOperation<String> GetHtmlFormatAsync();
    Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IMapView<String, Windows.Storage.Streams.RandomAccessStreamReference> > GetResourceMapAsync();
    Windows.Foundation.IAsyncOperation<String> GetRtfAsync();
    Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.RandomAccessStreamReference> GetBitmapAsync();
    Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Storage.IStorageItem> > GetStorageItemsAsync();

    Windows.Foundation.IAsyncOperation<Windows.Foundation.Uri> GetApplicationLinkAsync();
    Windows.Foundation.IAsyncOperation<Windows.Foundation.Uri> GetWebLinkAsync();

    [method_name("RequestAccessAsync")]
    Windows.Foundation.IAsyncOperation<Windows.Security.EnterpriseData.ProtectionPolicyEvaluationResult> RequestAccessAsync();
    [method_name("RequestAccessWithEnterpriseIdAsync")]
    Windows.Foundation.IAsyncOperation<Windows.Security.EnterpriseData.ProtectionPolicyEvaluationResult> RequestAccessAsync(String enterpriseId);
    Windows.Security.EnterpriseData.ProtectionPolicyEvaluationResult UnlockAndAssumeEnterpriseIdentity();

    void SetAcceptedFormatId(String formatId);
  }

  [contract(ClipboardContract, 1.0)]
  [interface_name("Microsoft.ProjectReunion.ApplicationModel.IDataProviderDeferral", 4f9a822c-1bb1-4c3e-b908-e202c8b87f4c)]
  runtimeclass DataProviderDeferral
  {
    void Complete();
  }

  [contract(ClipboardContract, 1.0)]
  [interface_name("Microsoft.ProjectReunion.ApplicationModel.IDataProviderRequest", 25f2c71c-832b-4b8e-b9e9-672f098d2770)]
  runtimeclass DataProviderRequest
  {
    String FormatId { get; };
    Windows.Foundation.DateTime Deadline { get; };
    DataProviderDeferral GetDeferral();
    void SetData(Object value);
  }

  [static_name("Microsoft.ProjectReunion.ApplicationModel.IHtmlFormatHelperStatics", cce26a46-4048-4fb4-99c8-b822d03cd526)]
  static runtimeclass HtmlFormatHelper
  {
    static String GetStaticFragment(String htmlFormat);
    static String CreateHtmlFormat(String htmlFragment);
  }

  [contract(ClipboardContract, 1.0)]
  [interface_name("Microsoft.ProjectReunion.ApplicationModel.IOperationCompletedEventArgs", a180ab74-fcc7-42f3-a6bd-5d373a28fc8d)]
  runtimeclass OperationCompletedEventArgs
  {
    DataPackageOperation Operation { get; };

    String AcceptedFormatId { get; };
  }

  [contract(ClipboardContract, 1.0)]
  [static_name("Microsoft.ProjectReunion.ApplicationModel.IStandardDataFormatsStatics", 18f4cbf8-64f1-4ba1-9e64-53648a0443a8)]
  static runtimeclass StandardDataFormats
  {
    static String Text { get; };
    [deprecated("Uri may be altered or unavailable in future releases. Instead, use WebLink or ApplicationLink.", deprecate, ClipboardContract, 1.0)]
    static String Uri { get; };
    static String Html { get; };
    static String Rtf { get; };
    static String Bitmap { get; };
    static String StorageItems { get; };

    static String WebLink { get; };
    static String ApplicationLink { get; };

    static String UserActivityJsonArray { get; };
  }

}
