// Copyright (c) Microsoft Corp. Licensed under the MIT license.

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.Security.EnterpriseData.idl";
import "Windows.Storage.idl";
import "Windows.Storage.Streams.idl";
import "Windows.UI.idl";

// Forward Declare
namespace Windows.Foundation
{
	typedef struct DateTime DateTime;
	runtimeclass Deferral;
	typedef struct Rect Rect;
	runtimeclass Uri;
}

namespace Windows.Security.EnterpriseData
{
	typedef enum ProtectionPolicyEvaluationResult ProtectionPolicyEvaluationResult;
}

namespace Windows.Storage
{
	interface IStorageFile;
	interface IStorageItem;
	runtimeclass StorageFile;
}

namespace Windows.Storage.Streams
{
	interface IRandomAccessStreamReference;
	runtimeclass RandomAccessStreamReference;
}

namespace Windows.UI
{
	typedef struct Color Color;
}

namespace Microsoft.ProjectReunion.ApplicationModel
{
	typedef enum ClipboardHistoryItemsResultStatus ClipboardHistoryItemsResultStatus;
	typedef enum DataPackageOperation DataPackageOperation;
	typedef enum SetHistoryItemAsContentStatus SetHistoryItemAsContentStatus;
	typedef enum ShareUITheme ShareUITheme;
	delegate DataProviderHandler;
	delegate ShareProviderHandler;
	interface IClipboardContentOptions;
	interface IClipboardHistoryChangedEventArgs;
	interface IClipboardHistoryItem;
	interface IClipboardHistoryItemsResult;
	interface IDataPackage;
	interface IDataPackage2;
	interface IDataPackage3;
	interface IDataPackage4;
	interface IDataPackagePropertySet;
	interface IDataPackagePropertySet2;
	interface IDataPackagePropertySet3;
	interface IDataPackagePropertySet4;
	interface IDataPackagePropertySetView;
	interface IDataPackagePropertySetView2;
	interface IDataPackagePropertySetView3;
	interface IDataPackagePropertySetView4;
	interface IDataPackagePropertySetView5;
	interface IDataPackageView;
	interface IDataPackageView2;
	interface IDataPackageView3;
	interface IDataPackageView4;
	interface IDataProviderDeferral;
	interface IDataProviderRequest;
	interface IDataRequest;
	interface IDataRequestDeferral;
	interface IDataRequestedEventArgs;
	interface IDataTransferManager;
	interface IDataTransferManager2;
	interface IDataTransferManagerStatics;
	interface IDataTransferManagerStatics2;
	interface IDataTransferManagerStatics3;
	interface IHtmlFormatHelperStatics;
	interface IOperationCompletedEventArgs;
	interface IOperationCompletedEventArgs2;
	interface IShareCompletedEventArgs;
	interface IShareProvider;
	interface IShareProviderFactory;
	interface IShareProviderOperation;
	interface IShareProvidersRequestedEventArgs;
	interface IShareTargetInfo;
	interface IShareUIOptions;
	interface ISharedStorageAccessManagerStatics;
	interface IStandardDataFormatsStatics;
	interface IStandardDataFormatsStatics2;
	interface IStandardDataFormatsStatics3;
	interface ITargetApplicationChosenEventArgs;
	runtimeclass Clipboard;
	runtimeclass ClipboardContentOptions;
	runtimeclass ClipboardHistoryChangedEventArgs;
	runtimeclass ClipboardHistoryItem;
	runtimeclass ClipboardHistoryItemsResult;
	runtimeclass DataPackage;
	runtimeclass DataPackagePropertySet;
	runtimeclass DataPackagePropertySetView;
	runtimeclass DataPackageView;
	runtimeclass DataProviderDeferral;
	runtimeclass DataProviderRequest;
	runtimeclass DataRequest;
	runtimeclass DataRequestDeferral;
	runtimeclass DataRequestedEventArgs;
	runtimeclass DataTransferManager;
	runtimeclass HtmlFormatHelper;
	runtimeclass OperationCompletedEventArgs;
	runtimeclass ShareCompletedEventArgs;
	runtimeclass ShareProvider;
	runtimeclass ShareProviderOperation;
	runtimeclass ShareProvidersRequestedEventArgs;
	runtimeclass ShareTargetInfo;
	runtimeclass ShareUIOptions;
	runtimeclass SharedStorageAccessManager;
	runtimeclass StandardDataFormats;
	runtimeclass TargetApplicationChosenEventArgs;
}

// Generic instantiations
namespace Microsoft.ProjectReunion.ApplicationModel
{
	declare
	{
		interface Windows.Foundation.Collections.IIterable<Microsoft.ProjectReunion.ApplicationModel.ClipboardHistoryItem*>;
		interface Windows.Foundation.Collections.IIterable<Microsoft.ProjectReunion.ApplicationModel.ShareProvider*>;
		interface Windows.Foundation.Collections.IIterator<Microsoft.ProjectReunion.ApplicationModel.ClipboardHistoryItem*>;
		interface Windows.Foundation.Collections.IIterator<Microsoft.ProjectReunion.ApplicationModel.ShareProvider*>;
		interface Windows.Foundation.Collections.IVectorView<Microsoft.ProjectReunion.ApplicationModel.ClipboardHistoryItem*>;
		interface Windows.Foundation.Collections.IVectorView<Microsoft.ProjectReunion.ApplicationModel.ShareProvider*>;
		interface Windows.Foundation.Collections.IVector<Microsoft.ProjectReunion.ApplicationModel.ShareProvider*>;
		interface Windows.Foundation.EventHandler<Microsoft.ProjectReunion.ApplicationModel.ClipboardHistoryChangedEventArgs*>;
		interface Windows.Foundation.IAsyncOperation<Microsoft.ProjectReunion.ApplicationModel.ClipboardHistoryItemsResult*>;
		interface Windows.Foundation.IAsyncOperation<Microsoft.ProjectReunion.ApplicationModel.DataPackage*>;
		interface Windows.Foundation.IAsyncOperation<Microsoft.ProjectReunion.ApplicationModel.DataPackageOperation>;
		interface Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataPackage*, IInspectable*>;
		interface Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataPackage*, Microsoft.ProjectReunion.ApplicationModel.OperationCompletedEventArgs*>;
		interface Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataPackage*, Microsoft.ProjectReunion.ApplicationModel.ShareCompletedEventArgs*>;
		interface Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataTransferManager*, Microsoft.ProjectReunion.ApplicationModel.DataRequestedEventArgs*>;
		interface Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataTransferManager*, Microsoft.ProjectReunion.ApplicationModel.ShareProvidersRequestedEventArgs*>;
		interface Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataTransferManager*, Microsoft.ProjectReunion.ApplicationModel.TargetApplicationChosenEventArgs*>;
	}
}

// Type definition
namespace Microsoft.ProjectReunion.ApplicationModel
{
	[contractversion(12.0)]
	apicontract ClipboardContract { };

	[contract(ClipboardContract, 7.0)]
	enum ClipboardHistoryItemsResultStatus
	{
		aaaSuccess                  = 0,
		aaaAccessDenied             = 1,
		aaaClipboardHistoryDisabled = 2
	};

	[contract(ClipboardContract, 1.0)]
	[flags]
	enum DataPackageOperation
	{
		aaaNone = 0x0,
		aaaCopy = 0x1,
		aaaMove = 0x2,
		aaaLink = 0x4
	};

	[contract(ClipboardContract, 7.0)]
	enum SetHistoryItemAsContentStatus
	{
		aaaSuccess      = 0,
		aaaAccessDenied = 1,
		aaaItemDeleted  = 2
	};

	[contract(ClipboardContract, 5.0)]
	enum ShareUITheme
	{
		aaaDefault = 0,
		aaaLight   = 1,
		aaaDark    = 2
	};

	[contract(ClipboardContract, 1.0)]
	[uuid(6d9e7bfb-3280-4219-be29-08145f30f4e5)]
	delegate
		HRESULT DataProviderHandler([in] Microsoft.ProjectReunion.ApplicationModel.DataProviderRequest* request);

	[contract(ClipboardContract, 4.0)]
	[uuid(0d89ad1d-bb56-43e0-89d3-df5f85af2dd6)]
	delegate
		HRESULT ShareProviderHandler([in] Microsoft.ProjectReunion.ApplicationModel.ShareProviderOperation* operation);

	[contract(ClipboardContract, 7.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.ClipboardContentOptions)]
	[uuid(c31b927f-1008-4e98-b575-adf175ccdd0b)]
	interface IClipboardContentOptions : IInspectable
	{
		[propget] HRESULT IsRoamable([out] [retval] boolean* value);
		[propput] HRESULT IsRoamable([in] boolean value);
		[propget] HRESULT IsAllowedInHistory([out] [retval] boolean* value);
		[propput] HRESULT IsAllowedInHistory([in] boolean value);
		[propget] HRESULT RoamingFormats([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
		[propget] HRESULT HistoryFormats([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
	}

	[contract(ClipboardContract, 7.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.ClipboardHistoryChangedEventArgs)]
	[uuid(9d1960c7-cf0a-4e51-943c-72373b7a2579)]
	interface IClipboardHistoryChangedEventArgs : IInspectable
	{
	}

	[contract(ClipboardContract, 7.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.ClipboardHistoryItem)]
	[uuid(1907eff8-7d2f-4a71-8a56-bd02effeb184)]
	interface IClipboardHistoryItem : IInspectable
	{
		[propget] HRESULT Id([out] [retval] HSTRING* value);
		[propget] HRESULT Timestamp([out] [retval] Windows.Foundation.DateTime* value);
		[propget] HRESULT Content([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataPackageView** value);
	}

	[contract(ClipboardContract, 7.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.ClipboardHistoryItemsResult)]
	[uuid(2f6c9705-f56b-42f0-b1a1-fc2d46d572e7)]
	interface IClipboardHistoryItemsResult : IInspectable
	{
		[propget] HRESULT Status([out] [retval] Microsoft.ProjectReunion.ApplicationModel.ClipboardHistoryItemsResultStatus* value);
		[propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVectorView<Microsoft.ProjectReunion.ApplicationModel.ClipboardHistoryItem*>** value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackage)]
	[uuid(36861532-b01e-49c5-9a0b-2282d079c9ac)]
	interface IDataPackage : IInspectable
	{
		HRESULT GetView([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataPackageView** result);
		[propget] HRESULT Properties([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataPackagePropertySet** value);
		[propget] HRESULT RequestedOperation([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataPackageOperation* value);
		[propput] HRESULT RequestedOperation([in] Microsoft.ProjectReunion.ApplicationModel.DataPackageOperation value);
		[eventadd] HRESULT OperationCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataPackage*, Microsoft.ProjectReunion.ApplicationModel.OperationCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
		[eventremove] HRESULT OperationCompleted([in] EventRegistrationToken token);
		[eventadd] HRESULT Destroyed([in] Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataPackage*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
		[eventremove] HRESULT Destroyed([in] EventRegistrationToken token);
		HRESULT SetData([in] HSTRING formatId, [in] IInspectable* value);
		HRESULT SetDataProvider([in] HSTRING formatId, [in] Microsoft.ProjectReunion.ApplicationModel.DataProviderHandler* delayRenderer);
		HRESULT SetText([in] HSTRING value);
		[deprecated("SetUri may be altered or unavailable for releases after Windows Phone 'OSVersion' (TBD).Instead, use SetWebLink or SetApplicationLink.", deprecate, ClipboardContract, 1.0)] HRESULT SetUri([in] Windows.Foundation.Uri* value);
		HRESULT SetHtmlFormat([in] HSTRING value);
		[propget] HRESULT ResourceMap([out] [retval] Windows.Foundation.Collections.IMap<HSTRING, Windows.Storage.Streams.RandomAccessStreamReference*>** value);
		HRESULT SetRtf([in] HSTRING value);
		HRESULT SetBitmap([in] Windows.Storage.Streams.RandomAccessStreamReference* value);
		[overload("SetStorageItems")] HRESULT SetStorageItemsReadOnly([in] Windows.Foundation.Collections.IIterable<Windows.Storage.IStorageItem*>* value);
		[overload("SetStorageItems")] HRESULT SetStorageItems([in] Windows.Foundation.Collections.IIterable<Windows.Storage.IStorageItem*>* value, [in] boolean readOnly);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackage)]
	[uuid(9f8a2f2b-3602-48ec-b0dd-4d7f754da3b2)]
	interface IDataPackage2 : IInspectable
	{
		HRESULT SetApplicationLink([in] Windows.Foundation.Uri* value);
		HRESULT SetWebLink([in] Windows.Foundation.Uri* value);
	}

	[contract(ClipboardContract, 4.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackage)]
	[uuid(670dbf2f-9f0e-4ed9-a3f3-775fb0cd2134)]
	interface IDataPackage3 : IInspectable
	{
		[eventadd] HRESULT ShareCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataPackage*, Microsoft.ProjectReunion.ApplicationModel.ShareCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
		[eventremove] HRESULT ShareCompleted([in] EventRegistrationToken token);
	}

	[contract(ClipboardContract, 10.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackage)]
	[uuid(fd923204-3d54-4fd2-b1fc-607984c97f43)]
	interface IDataPackage4 : IInspectable
	{
		[eventadd] HRESULT ShareCanceled([in] Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataPackage*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
		[eventremove] HRESULT ShareCanceled([in] EventRegistrationToken token);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackagePropertySet)]
	[uuid(6c1bd5dd-d89e-4f79-ae3b-4ad565586202)]
	interface IDataPackagePropertySet : IInspectable
		requires
			Windows.Foundation.Collections.IMap<HSTRING, IInspectable*>,
			Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, IInspectable*>*>
	{
		[propget] HRESULT Title([out] [retval] HSTRING* value);
		[propput] HRESULT Title([in] HSTRING value);
		[propget] HRESULT Description([out] [retval] HSTRING* value);
		[propput] HRESULT Description([in] HSTRING value);
		[propget] HRESULT Thumbnail([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
		[propput] HRESULT Thumbnail([in] Windows.Storage.Streams.IRandomAccessStreamReference* value);
		[propget] HRESULT FileTypes([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
		[propget] HRESULT ApplicationName([out] [retval] HSTRING* value);
		[propput] HRESULT ApplicationName([in] HSTRING value);
		[propget] HRESULT ApplicationListingUri([out] [retval] Windows.Foundation.Uri** value);
		[propput] HRESULT ApplicationListingUri([in] Windows.Foundation.Uri* value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackagePropertySet)]
	[uuid(744e9c77-6463-4b99-b3c3-f69d9ee594bf)]
	interface IDataPackagePropertySet2 : IInspectable
	{
		[propget] HRESULT ContentSourceWebLink([out] [retval] Windows.Foundation.Uri** value);
		[propput] HRESULT ContentSourceWebLink([in] Windows.Foundation.Uri* value);
		[propget] HRESULT ContentSourceApplicationLink([out] [retval] Windows.Foundation.Uri** value);
		[propput] HRESULT ContentSourceApplicationLink([in] Windows.Foundation.Uri* value);
		[propget] HRESULT PackageFamilyName([out] [retval] HSTRING* value);
		[propput] HRESULT PackageFamilyName([in] HSTRING value);
		[propget] HRESULT Square30x30Logo([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
		[propput] HRESULT Square30x30Logo([in] Windows.Storage.Streams.IRandomAccessStreamReference* value);
		[propget] HRESULT LogoBackgroundColor([out] [retval] Windows.UI.Color* value);
		[propput] HRESULT LogoBackgroundColor([in] Windows.UI.Color value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackagePropertySet)]
	[uuid(c8c24a60-f4b3-4ab0-88e9-c23062e0cc33)]
	interface IDataPackagePropertySet3 : IInspectable
	{
		[propget] HRESULT EnterpriseId([out] [retval] HSTRING* value);
		[propput] HRESULT EnterpriseId([in] HSTRING value);
	}

	[contract(ClipboardContract, 6.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackagePropertySet)]
	[uuid(d1270af6-a2e8-4d31-b697-b48103d5a15a)]
	interface IDataPackagePropertySet4 : IInspectable
	{
		[propget] HRESULT ContentSourceUserActivityJson([out] [retval] HSTRING* value);
		[propput] HRESULT ContentSourceUserActivityJson([in] HSTRING value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackagePropertySetView)]
	[uuid(054c0bc4-ca76-4e7d-9511-4322a5a0b58b)]
	interface IDataPackagePropertySetView : IInspectable
	{
		[propget] HRESULT Title([out] [retval] HSTRING* value);
		[propget] HRESULT Description([out] [retval] HSTRING* value);
		[propget] HRESULT Thumbnail([out] [retval] Windows.Storage.Streams.RandomAccessStreamReference** value);
		[propget] HRESULT FileTypes([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
		[propget] HRESULT ApplicationName([out] [retval] HSTRING* value);
		[propget] HRESULT ApplicationListingUri([out] [retval] Windows.Foundation.Uri** value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackagePropertySetView)]
	[uuid(e35b2f0d-1c7a-4bf3-ab72-50554054d7b2)]
	interface IDataPackagePropertySetView2 : IInspectable
	{
		[propget] HRESULT PackageFamilyName([out] [retval] HSTRING* value);
		[propget] HRESULT ContentSourceWebLink([out] [retval] Windows.Foundation.Uri** value);
		[propget] HRESULT ContentSourceApplicationLink([out] [retval] Windows.Foundation.Uri** value);
		[propget] HRESULT Square30x30Logo([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
		[propget] HRESULT LogoBackgroundColor([out] [retval] Windows.UI.Color* value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackagePropertySetView)]
	[uuid(52067bc5-0b4c-4559-8da1-cc75dc6f2344)]
	interface IDataPackagePropertySetView3 : IInspectable
	{
		[propget] HRESULT EnterpriseId([out] [retval] HSTRING* value);
	}

	[contract(ClipboardContract, 6.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackagePropertySetView)]
	[uuid(0e1a2836-c904-4e63-be50-d3f743864782)]
	interface IDataPackagePropertySetView4 : IInspectable
	{
		[propget] HRESULT ContentSourceUserActivityJson([out] [retval] HSTRING* value);
	}

	[contract(ClipboardContract, 7.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackagePropertySetView)]
	[uuid(75ff681c-4bd4-4cfb-aede-9c3a7e6f245d)]
	interface IDataPackagePropertySetView5 : IInspectable
	{
		[propget] HRESULT IsFromRoamingClipboard([out] [retval] boolean* value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackageView)]
	[uuid(659f7a31-3335-4e57-b373-8898ffae5ab1)]
	interface IDataPackageView : IInspectable
	{
		[propget] HRESULT Properties([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataPackagePropertySetView** value);
		[propget] HRESULT RequestedOperation([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataPackageOperation* value);
		HRESULT ReportOperationCompleted([in] Microsoft.ProjectReunion.ApplicationModel.DataPackageOperation value);
		[propget] HRESULT AvailableFormats([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** formatIds);
		HRESULT Contains([in] HSTRING formatId, [out] [retval] boolean* value);
		HRESULT GetDataAsync([in] HSTRING formatId, [out] [retval] Windows.Foundation.IAsyncOperation<IInspectable*>** operation);
		[overload("GetTextAsync")] HRESULT GetTextAsync([out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
		[overload("GetTextAsync")] HRESULT GetCustomTextAsync([in] HSTRING formatId, [out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
		[deprecated("GetUriAsync may be altered or unavailable for releases after Windows 8.1. Instead, use GetWebLinkAsync or GetApplicationLinkAsync.", deprecate, ClipboardContract, 1.0)] HRESULT GetUriAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Uri*>** operation);
		HRESULT GetHtmlFormatAsync([out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
		HRESULT GetResourceMapAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IMapView<HSTRING, Windows.Storage.Streams.RandomAccessStreamReference*>*>** operation);
		HRESULT GetRtfAsync([out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
		HRESULT GetBitmapAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.RandomAccessStreamReference*>** operation);
		HRESULT GetStorageItemsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Storage.IStorageItem*>*>** operation);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackageView)]
	[uuid(a64648c4-fefb-48b4-a0b4-d9be5ac8233b)]
	interface IDataPackageView2 : IInspectable
	{
		HRESULT GetApplicationLinkAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Uri*>** operation);
		HRESULT GetWebLinkAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Uri*>** operation);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackageView)]
	[uuid(9b0e47cd-8eef-485d-bdd1-d371e9cf2ebe)]
	interface IDataPackageView3 : IInspectable
	{
		[overload("RequestAccessAsync")] HRESULT RequestAccessAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Security.EnterpriseData.ProtectionPolicyEvaluationResult>** operation);
		[overload("RequestAccessAsync")] HRESULT RequestAccessWithEnterpriseIdAsync([in] HSTRING enterpriseId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Security.EnterpriseData.ProtectionPolicyEvaluationResult>** operation);
		HRESULT UnlockAndAssumeEnterpriseIdentity([out] [retval] Windows.Security.EnterpriseData.ProtectionPolicyEvaluationResult* result);
	}

	[contract(ClipboardContract, 2.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataPackageView)]
	[uuid(a56c7b9b-7865-4177-abf5-99412eb412a9)]
	interface IDataPackageView4 : IInspectable
	{
		HRESULT SetAcceptedFormatId([in] HSTRING formatId);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataProviderDeferral)]
	[uuid(4f9a822c-1bb1-4c3e-b908-e202c8b87f4c)]
	interface IDataProviderDeferral : IInspectable
	{
		HRESULT Complete();
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataProviderRequest)]
	[uuid(25f2c71c-832b-4b8e-b9e9-672f098d2770)]
	interface IDataProviderRequest : IInspectable
	{
		[propget] HRESULT FormatId([out] [retval] HSTRING* value);
		[propget] HRESULT Deadline([out] [retval] Windows.Foundation.DateTime* value);
		HRESULT GetDeferral([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataProviderDeferral** value);
		HRESULT SetData([in] IInspectable* value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataRequest)]
	[uuid(6a17e08b-8a32-484c-a07a-d416c04277cb)]
	interface IDataRequest : IInspectable
	{
		[propget] HRESULT Data([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataPackage** value);
		[propput] HRESULT Data([in] Microsoft.ProjectReunion.ApplicationModel.DataPackage* value);
		[propget] HRESULT Deadline([out] [retval] Windows.Foundation.DateTime* value);
		HRESULT FailWithDisplayText([in] HSTRING value);
		HRESULT GetDeferral([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataRequestDeferral** value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataRequestDeferral)]
	[uuid(dbb4bb17-24d4-45c7-b668-18b162942504)]
	interface IDataRequestDeferral : IInspectable
	{
		HRESULT Complete();
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataRequestedEventArgs)]
	[uuid(e169b0d1-224d-42e1-84b7-1851d72da4e0)]
	interface IDataRequestedEventArgs : IInspectable
	{
		[propget] HRESULT Request([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataRequest** value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataTransferManager)]
	[uuid(d55b10ac-e3c1-4b9d-ba05-e28056811f4b)]
	interface IDataTransferManager : IInspectable
	{
		[eventadd] HRESULT DataRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataTransferManager*, Microsoft.ProjectReunion.ApplicationModel.DataRequestedEventArgs*>* eventHandler, [out] [retval] EventRegistrationToken* eventCookie);
		[eventremove] HRESULT DataRequested([in] EventRegistrationToken eventCookie);
		[eventadd] HRESULT TargetApplicationChosen([in] Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataTransferManager*, Microsoft.ProjectReunion.ApplicationModel.TargetApplicationChosenEventArgs*>* eventHandler, [out] [retval] EventRegistrationToken* eventCookie);
		[eventremove] HRESULT TargetApplicationChosen([in] EventRegistrationToken eventCookie);
	}

	[contract(ClipboardContract, 4.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataTransferManager)]
	[uuid(11c45fc0-76d6-4ff2-86f5-91481511b26c)]
	interface IDataTransferManager2 : IInspectable
	{
		[eventadd] HRESULT ShareProvidersRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.ProjectReunion.ApplicationModel.DataTransferManager*, Microsoft.ProjectReunion.ApplicationModel.ShareProvidersRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
		[eventremove] HRESULT ShareProvidersRequested([in] EventRegistrationToken token);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataTransferManager)]
	[uuid(0dc0af01-b3ae-484c-9752-910ce975392f)]
	interface IDataTransferManagerStatics : IInspectable
	{
		HRESULT ShowShareUI();
		HRESULT GetForCurrentView([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataTransferManager** value);
	}

	[contract(ClipboardContract, 3.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataTransferManager)]
	[uuid(0e9a748d-3b26-4b7b-9399-ee372d58bf32)]
	interface IDataTransferManagerStatics2 : IInspectable
	{
		HRESULT IsSupported([out] [retval] boolean* value);
	}

	[contract(ClipboardContract, 5.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.DataTransferManager)]
	[uuid(dfd9220a-e51c-4dad-8b41-86d15192faab)]
	interface IDataTransferManagerStatics3 : IInspectable
	{
		[overload("ShowShareUI")] HRESULT ShowShareUIWithOptions([in] Microsoft.ProjectReunion.ApplicationModel.ShareUIOptions* options);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.HtmlFormatHelper)]
	[uuid(cce26a46-4048-4fb4-99c8-b822d03cd526)]
	interface IHtmlFormatHelperStatics : IInspectable
	{
		HRESULT GetStaticFragment([in] HSTRING htmlFormat, [out] [retval] HSTRING* htmlFragment);
		HRESULT CreateHtmlFormat([in] HSTRING htmlFragment, [out] [retval] HSTRING* htmlFormat);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.OperationCompletedEventArgs)]
	[uuid(a180ab74-fcc7-42f3-a6bd-5d373a28fc8d)]
	interface IOperationCompletedEventArgs : IInspectable
	{
		[propget] HRESULT Operation([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataPackageOperation* value);
	}

	[contract(ClipboardContract, 2.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.OperationCompletedEventArgs)]
	[uuid(42d44094-eebc-4e52-b98b-7d0bb646a96f)]
	interface IOperationCompletedEventArgs2 : IInspectable
	{
		[propget] HRESULT AcceptedFormatId([out] [retval] HSTRING* value);
	}

	[contract(ClipboardContract, 4.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.ShareCompletedEventArgs)]
	[uuid(5107a2a6-6dd3-491a-8f1a-93a1867afa56)]
	interface IShareCompletedEventArgs : IInspectable
	{
		[propget] HRESULT ShareTarget([out] [retval] Microsoft.ProjectReunion.ApplicationModel.ShareTargetInfo** value);
	}

	[contract(ClipboardContract, 4.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.ShareProvider)]
	[uuid(6dcdc9a9-7118-43c5-ab39-c5b81ae919b3)]
	interface IShareProvider : IInspectable
	{
		[propget] HRESULT Title([out] [retval] HSTRING* value);
		[propget] HRESULT DisplayIcon([out] [retval] Windows.Storage.Streams.RandomAccessStreamReference** value);
		[propget] HRESULT BackgroundColor([out] [retval] Windows.UI.Color* value);
		[propget] HRESULT Tag([out] [retval] IInspectable** value);
		[propput] HRESULT Tag([in] IInspectable* value);
	}

	[contract(ClipboardContract, 4.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.ShareProvider)]
	[uuid(05994b01-3050-46ea-a2f1-db35deb79ab5)]
	interface IShareProviderFactory : IInspectable
	{
		HRESULT Create([in] HSTRING title, [in] Windows.Storage.Streams.RandomAccessStreamReference* displayIcon, [in] Windows.UI.Color backgroundColor, [in] Microsoft.ProjectReunion.ApplicationModel.ShareProviderHandler* handler, [out] [retval] Microsoft.ProjectReunion.ApplicationModel.ShareProvider** result);
	}

	[contract(ClipboardContract, 4.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.ShareProviderOperation)]
	[uuid(6956d6f1-ab46-4bcf-a1d3-be8e9a7d31e7)]
	interface IShareProviderOperation : IInspectable
	{
		[propget] HRESULT Data([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataPackageView** value);
		[propget] HRESULT Provider([out] [retval] Microsoft.ProjectReunion.ApplicationModel.ShareProvider** value);
		HRESULT ReportCompleted();
	}

	[contract(ClipboardContract, 4.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.ShareProvidersRequestedEventArgs)]
	[uuid(7314a2ef-4a97-4e53-b347-2316b67e9121)]
	interface IShareProvidersRequestedEventArgs : IInspectable
	{
		[propget] HRESULT Providers([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.ProjectReunion.ApplicationModel.ShareProvider*>** value);
		[propget] HRESULT Data([out] [retval] Microsoft.ProjectReunion.ApplicationModel.DataPackageView** value);
		HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** value);
	}

	[contract(ClipboardContract, 4.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.ShareTargetInfo)]
	[uuid(9b7ceae7-5d6f-4d29-9a17-427208267b9d)]
	interface IShareTargetInfo : IInspectable
	{
		[propget] HRESULT AppUserModelId([out] [retval] HSTRING* value);
		[propget] HRESULT ShareProvider([out] [retval] Microsoft.ProjectReunion.ApplicationModel.ShareProvider** value);
	}

	[contract(ClipboardContract, 5.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.ShareUIOptions)]
	[uuid(443a3262-9729-40e4-819c-015f62b4d1c5)]
	interface IShareUIOptions : IInspectable
	{
		[propget] HRESULT Theme([out] [retval] Microsoft.ProjectReunion.ApplicationModel.ShareUITheme* value);
		[propput] HRESULT Theme([in] Microsoft.ProjectReunion.ApplicationModel.ShareUITheme value);
		[propget] HRESULT SelectionRect([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Rect>** value);
		[propput] HRESULT SelectionRect([in] Windows.Foundation.IReference<Windows.Foundation.Rect>* value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.SharedStorageAccessManager)]
	[uuid(9b5b520e-1b1a-487a-be92-f214f21c255f)]
	interface ISharedStorageAccessManagerStatics : IInspectable
	{
		HRESULT AddFile([in] Windows.Storage.IStorageFile* file, [out] [retval] HSTRING* outToken);
		HRESULT RedeemTokenForFileAsync([in] HSTRING token, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile*>** operation);
		HRESULT RemoveFile([in] HSTRING token);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.StandardDataFormats)]
	[uuid(18f4cbf8-64f1-4ba1-9e64-53648a0443a8)]
	interface IStandardDataFormatsStatics : IInspectable
	{
		[propget] HRESULT Text([out] [retval] HSTRING* value);
		[deprecated("Uri may be altered or unavailable for releases after Windows Phone 'OSVersion' (TBD). Instead, use WebLink or ApplicationLink.", deprecate, ClipboardContract, 1.0)] [propget] HRESULT Uri([out] [retval] HSTRING* value);
		[propget] HRESULT Html([out] [retval] HSTRING* value);
		[propget] HRESULT Rtf([out] [retval] HSTRING* value);
		[propget] HRESULT Bitmap([out] [retval] HSTRING* value);
		[propget] HRESULT StorageItems([out] [retval] HSTRING* value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.StandardDataFormats)]
	[uuid(49fe04c9-d5f6-4416-a0cf-68a484e218b3)]
	interface IStandardDataFormatsStatics2 : IInspectable
	{
		[propget] HRESULT WebLink([out] [retval] HSTRING* value);
		[propget] HRESULT ApplicationLink([out] [retval] HSTRING* value);
	}

	[contract(ClipboardContract, 6.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.StandardDataFormats)]
	[uuid(8540c4ae-3d15-44ad-9a13-59fe48f111ba)]
	interface IStandardDataFormatsStatics3 : IInspectable
	{
		[propget] HRESULT UserActivityJsonArray([out] [retval] HSTRING* value);
	}

	[contract(ClipboardContract, 1.0)]
	[exclusiveto(Microsoft.ProjectReunion.ApplicationModel.TargetApplicationChosenEventArgs)]
	[uuid(cdaa58b4-c944-4c6b-a8f4-f429131cc2ee)]
	interface ITargetApplicationChosenEventArgs : IInspectable
	{
		[propget] HRESULT ApplicationName([out] [retval] HSTRING* value);
	}

	[contract(ClipboardContract, 7.0)]
	[static_name("Microsoft.ProjectReunion.ApplicationModel.IClipboardStatics", 6cb53030-4da0-43a1-95ab-52f87cf59c3a)]
	[marshaling_behavior(standard)]
	runtimeclass Clipboard
	{
		static DataPackageView GetContent();
		static void SetContent(DataPackage content);
		static void Flush();
		static void Clear();
		static event Windows.Foundation.EventHandler<Object> ContentChanged;

		static Windows.Foundation.IAsyncOperation<ClipboardHistoryItemsResult> GetHistoryItemsAsync();
		static Boolean ClearHistory();
		static Boolean DeleteItemFromHistory(ClipboardHistoryItem item);
		static SetHistoryItemAsContentStatus SetHistoryItemAsContent(ClipboardHistoryItem item);
		static Boolean IsHistoryEnabled();
		static Boolean IsRoamingEnabled();
		static Boolean SetContentWithOptions(DataPackage content, ClipboardContentOptions options);
		static event Windows.Foundation.EventHandler<ClipboardHistoryChangedEventArgs> HistoryChanged;
		static event Windows.Foundation.EventHandler<Object> RoamingEnabledChanged;
		static event Windows.Foundation.EventHandler<Object> HistoryEnabledChanged;
	}

	[activatable(ClipboardContract, 7.0)]
	[contract(ClipboardContract, 7.0)]
	[marshaling_behavior(agile)]
	[threading(both)]
	runtimeclass ClipboardContentOptions
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IClipboardContentOptions;
	}

	[contract(ClipboardContract, 7.0)]
	[marshaling_behavior(agile)]
	runtimeclass ClipboardHistoryChangedEventArgs
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IClipboardHistoryChangedEventArgs;
	}

	[contract(ClipboardContract, 7.0)]
	[marshaling_behavior(agile)]
	runtimeclass ClipboardHistoryItem
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IClipboardHistoryItem;
	}

	[contract(ClipboardContract, 7.0)]
	[marshaling_behavior(agile)]
	runtimeclass ClipboardHistoryItemsResult
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IClipboardHistoryItemsResult;
	}

	[activatable(ClipboardContract, 1.0)]
	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	[threading(both)]
	runtimeclass DataPackage
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackage;
		[contract(ClipboardContract, 1.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackage2;
		[contract(ClipboardContract, 4.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackage3;
		[contract(ClipboardContract, 10.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackage4;
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	runtimeclass DataPackagePropertySet
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackagePropertySet;
		interface Windows.Foundation.Collections.IMap<HSTRING, IInspectable*>;
		interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, IInspectable*>*>;
		[contract(ClipboardContract, 1.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackagePropertySet2;
		[contract(ClipboardContract, 1.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackagePropertySet3;
		[contract(ClipboardContract, 6.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackagePropertySet4;
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	runtimeclass DataPackagePropertySetView
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackagePropertySetView;
		[contract(ClipboardContract, 1.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackagePropertySetView2;
		[contract(ClipboardContract, 1.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackagePropertySetView3;
		[contract(ClipboardContract, 6.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackagePropertySetView4;
		[contract(ClipboardContract, 7.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackagePropertySetView5;
		interface Windows.Foundation.Collections.IMapView<HSTRING, IInspectable*>;
		interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, IInspectable*>*>;
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	runtimeclass DataPackageView
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackageView;
		[contract(ClipboardContract, 1.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackageView2;
		[contract(ClipboardContract, 1.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackageView3;
		[contract(ClipboardContract, 2.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataPackageView4;
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	runtimeclass DataProviderDeferral
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IDataProviderDeferral;
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	runtimeclass DataProviderRequest
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IDataProviderRequest;
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	runtimeclass DataRequest
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IDataRequest;
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	runtimeclass DataRequestDeferral
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IDataRequestDeferral;
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	runtimeclass DataRequestedEventArgs
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IDataRequestedEventArgs;
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(standard)]
	[static(Microsoft.ProjectReunion.ApplicationModel.IDataTransferManagerStatics, ClipboardContract, 1.0)]
	[static(Microsoft.ProjectReunion.ApplicationModel.IDataTransferManagerStatics2, ClipboardContract, 3.0)]
	[static(Microsoft.ProjectReunion.ApplicationModel.IDataTransferManagerStatics3, ClipboardContract, 5.0)]
	runtimeclass DataTransferManager
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IDataTransferManager;
		[contract(ClipboardContract, 4.0)] interface Microsoft.ProjectReunion.ApplicationModel.IDataTransferManager2;
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	[static(Microsoft.ProjectReunion.ApplicationModel.IHtmlFormatHelperStatics, ClipboardContract, 1.0)]
	runtimeclass HtmlFormatHelper
	{
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	runtimeclass OperationCompletedEventArgs
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IOperationCompletedEventArgs;
		[contract(ClipboardContract, 2.0)] interface Microsoft.ProjectReunion.ApplicationModel.IOperationCompletedEventArgs2;
	}

	[contract(ClipboardContract, 4.0)]
	[marshaling_behavior(agile)]
	runtimeclass ShareCompletedEventArgs
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IShareCompletedEventArgs;
	}

	[activatable(Microsoft.ProjectReunion.ApplicationModel.IShareProviderFactory, ClipboardContract, 4.0)]
	[contract(ClipboardContract, 4.0)]
	[marshaling_behavior(agile)]
	runtimeclass ShareProvider
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IShareProvider;
	}

	[contract(ClipboardContract, 4.0)]
	[marshaling_behavior(agile)]
	runtimeclass ShareProviderOperation
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IShareProviderOperation;
	}

	[contract(ClipboardContract, 4.0)]
	[marshaling_behavior(agile)]
	runtimeclass ShareProvidersRequestedEventArgs
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IShareProvidersRequestedEventArgs;
	}

	[contract(ClipboardContract, 4.0)]
	[marshaling_behavior(agile)]
	runtimeclass ShareTargetInfo
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IShareTargetInfo;
	}

	[activatable(ClipboardContract, 5.0)]
	[contract(ClipboardContract, 5.0)]
	[marshaling_behavior(agile)]
	[threading(both)]
	runtimeclass ShareUIOptions
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.IShareUIOptions;
	}

	[contract(ClipboardContract, 1.0)]
	[static(Microsoft.ProjectReunion.ApplicationModel.ISharedStorageAccessManagerStatics, ClipboardContract, 1.0)]
	runtimeclass SharedStorageAccessManager
	{
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	[static(Microsoft.ProjectReunion.ApplicationModel.IStandardDataFormatsStatics, ClipboardContract, 1.0)]
	[static(Microsoft.ProjectReunion.ApplicationModel.IStandardDataFormatsStatics2, ClipboardContract, 1.0)]
	[static(Microsoft.ProjectReunion.ApplicationModel.IStandardDataFormatsStatics3, ClipboardContract, 6.0)]
	runtimeclass StandardDataFormats
	{
	}

	[contract(ClipboardContract, 1.0)]
	[marshaling_behavior(agile)]
	runtimeclass TargetApplicationChosenEventArgs
	{
		[default] interface Microsoft.ProjectReunion.ApplicationModel.ITargetApplicationChosenEventArgs;
	}
}
